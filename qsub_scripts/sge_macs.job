#!/bin/bash -l
# Batch script to run a serial job on Legion with the upgraded
# software stack under SGE.
# 1. Force bash as the executing shell.
#$ -S /bin/bash
# 2. Request 6 hours of wallclock time (format hours:minutes:seconds).
#$ -l h_rt=6:00:0
#$ -l mem=24G
# 4. Request 40 gigabyte of TMPDIR space (default is 10 GB)
#$ -l tmpfs=60G
# 5. Set the name of the job.
#$ -N pool_atac
# 6 join output streams
#$ -j yes
# 7 export job environment
#$ -V
#===========================
# Create pooled datasets
#===========================

cd "$TMPDIR" || exit

REP1_TA_FILE=$1         #rep1 Tagalign
REP2_TA_FILE=$2         #rep2 Tagalign
POOLED_TA_FILE=$3       #pooled TA file  
REP1_PR1_TA_FILE=$4     #rep1 pseudoreplicate
REP1_PR2_TA_FILE=$5     #rep1 pseudoreplicate
REP2_PR1_TA_FILE=$6     #rep2 pseudoreplicate
REP2_PR2_TA_FILE=$7     #rep2 pseudoreplicate
PPR1_TA_FILE=$8         #pooled pseudoreplicate1
PPR2_TA_FILE=$9         #pooled pseudoreplicate2
wd=${10}

#============================
# copy tag align to $TMPDIR
#============================

cp "$REP1_TA_FILE" .
cp "$REP2_TA_FILE" .
cp "$POOLED_TA_FILE" .
cp "$REP1_PR1_TA_FILE" .
cp "$REP1_PR2_TA_FILE" .
cp "$REP2_PR1_TA_FILE" .
cp "$REP2_PR2_TA_FILE" .
cp "$PPR1_TA_FILE" .
cp "$PPR2_TA_FILE" .


for tag in ./*gz
do
prefix=${tag:0:${#tag}-12} # remove .tagAlign.gz 
peakfile="${prefix}.narrowPeak.gz"
pval_thresh=0.01
fc_bedgraph="${prefix}.fc.signal.bedgraph"
fc_bedgraph_srt="${prefix}.fc.signal.srt.bedgraph"
fc_bigwig="${prefix}_sig.fc.signal.bigwig"
pval_bedgraph="${prefix}.pval.signal.bedgraph"
pval_bedgraph_srt="${prefix}.pval.signal.srt.bedgraph"
pval_bigwig="${prefix}_sig.pval.signal.bigwig"
chrsz="/home/sejjctj/Scratch/reference/grch38/hg38.chr.sizes"


## see https://github.com/taoliu/MACS/issues/145 for choice of --shift and --extsize

macs2 callpeak \
-t "$tag" -f BED -n "$prefix" -g 2700000000 -p $pval_thresh \
--nomodel --shift -100 --extsize 200 -B --SPMR --keep-dup all --call-summits

# Sort by Col8 in descending order and replace long peak names in Column 4 with Peak_<peakRank>
sort -k 8gr,8gr "$prefix"_peaks.narrowPeak | awk 'BEGIN{OFS="\t"}{$4="Peak_"NR ; print $0}' | gzip -nc > "$peakfile"
rm -f "$prefix"_peaks.narrowPeak
rm -f "$prefix"_peaks.xls
rm -f "$prefix"_summits.bed

macs2 bdgcmp -t "$prefix"_treat_pileup.bdg -c "$prefix"_control_lambda.bdg \
    --o-prefix "$prefix" -m FE
slopBed -i "$prefix"_FE.bdg -g "$chrsz" -b 0 | bedClip stdin "$chrsz" "$fc_bedgraph"
rm -f "$prefix"_FE.bdg

sort -k1,1 -k2,2n "$fc_bedgraph" > "$fc_bedgraph_srt"
bedGraphToBigWig "$fc_bedgraph_srt" "$chrsz" "$fc_bigwig"
rm -f "$fc_bedgraph" "$fc_bedgraph_srt"

# sval counts the number of tags per million in the (compressed) BED file

sval=$(wc -l <(zcat -f "$tag") | awk '{printf "%f", $1/1000000}')


macs2 bdgcmp \
    -t "$prefix"_treat_pileup.bdg -c "$prefix"_control_lambda.bdg \
    --o-prefix "$prefix" -m ppois -S "${sval}"
slopBed -i "$prefix"_ppois.bdg -g "$chrsz" -b 0 | bedClip stdin "$chrsz" "$pval_bedgraph"
rm -f "$prefix"_ppois.bdg


sort -k1,1 -k2,2n "$pval_bedgraph" > "$pval_bedgraph_srt"
bedGraphToBigWig "$pval_bedgraph_srt" "$chrsz" "$pval_bigwig"
rm -f "$pval_bedgraph" "$pval_bedgraph_srt"


rm -f "$prefix"_treat_pileup.bdg "$prefix"_control_lambda.bdg
done

tar zcvf "$wd"/call_peaks_"$JOB_ID".tar.gz "$TMPDIR"
